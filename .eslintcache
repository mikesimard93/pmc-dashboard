[{"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/index.js":"1","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/App.js":"2","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/hours_members.js":"3","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/gauge.js":"4","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/to_watch.js":"5","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/finance_gauge.js":"6","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/graph.js":"7","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/intro.js":"8","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data/data.js":"9","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/pie_chart_modules_hours.js":"10"},{"size":219,"mtime":1611353228160,"results":"11","hashOfConfig":"12"},{"size":13265,"mtime":1611577033438,"results":"13","hashOfConfig":"12"},{"size":2147,"mtime":1611576686477,"results":"14","hashOfConfig":"12"},{"size":701,"mtime":1611014086319,"results":"15","hashOfConfig":"12"},{"size":1791,"mtime":1611577669256,"results":"16","hashOfConfig":"12"},{"size":1031,"mtime":1611577103638,"results":"17","hashOfConfig":"12"},{"size":4742,"mtime":1611537866724,"results":"18","hashOfConfig":"12"},{"size":1603,"mtime":1611577621438,"results":"19","hashOfConfig":"12"},{"size":2087,"mtime":1610996798889,"results":"20","hashOfConfig":"12"},{"size":1069,"mtime":1611576863766,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18jbzw8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/index.js",[],["46","47"],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/App.js",["48","49","50","51","52","53","54","55","56","57","58","59","60"],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/hours_members.js",[],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/gauge.js",["61","62","63"],"import React from 'react';\nimport { BarGauge, Label, Legend, Export, Title, Font } from 'devextreme-react/bar-gauge';\n\nconst values = [1];\nconst format = {\n    type: 'fixedPoint',\n    precision: 1\n};\n\nclass App extends React.Component {\n\n    render() {\n        return (\n\n            <BarGauge\n                id=\"gauge\"\n                startValue={0}\n                endValue={2}\n                defaultValues={values}\n            >\n                <Label indent={20} format={format} customizeText={this.customizeText} />\n                <Export enabled={false} />\n            </BarGauge>\n        );\n    }\n\n    customizeText({ valueText }) {\n        return `${valueText}`;\n    }\n}\n\nexport default App;","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/to_watch.js",["64","65","66"],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/finance_gauge.js",["67","68"],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/graph.js",["69","70","71","72","73","74","75"],"import Tree from 'react-tree-graph';\nimport React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport '../App.css';\n\n\nconst asana = require('asana');\nconst client = asana.Client.create().useAccessToken('1/1105136235820223:056448b931a5e79f598f1fd698d25356');\n\n\nfunction Graph() {\n    const [graph, updateGraph] = React.useState([]);\n    const [dataLoaded, changeLoadStatus] = React.useState(false);\n    var tree = {}\n    React.useEffect(() => {\n        console.log(tree)\n        test()\n    }, [graph])\n\n    var milestones = {}\n    function getMilestones() {\n        return new Promise(resolve => {\n            client.tasks.searchInWorkspace('622159997203998', {'resource_subtype': 'milestone'})\n                // ,opt_fields=['due_on','assignee','completed_at','custom_fields','name', 'created_at', 'resource_subtype'], opt_pretty=True\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function getTask(task_gid) {\n        return new Promise(resolve => {\n            client.tasks.getTask(task_gid)\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function getDependencies(task_gid) {\n        return new Promise(resolve => {\n            client.tasks.dependencies(task_gid)\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function fillObject(obj, task, time) {\n        return new Promise(resolve => {\n            const new_key = task.name\n            obj.children.push( {\n                gProps: {\n                    className: 'red-node'\n                },\n                name: task.name,\n                gid: task.gid,\n                total_dependencies_time: 0.0,\n                due_on: task.due_on,\n                created_at: task.created_at,\n                estimated_time: task.custom_fields[2].number_value,\n                completed_at: task.completed_at,\n                module: task.custom_fields[0].enum_value.name,\n                type: task.resource_subtype,\n                clocked_time: time\n            });\n\n            resolve(obj);\n        })\n    }\n\n    function recursive(task_dependencies, obj) {\n        return new Promise(async resolve => {\n            obj.children = new Array();\n            var total_time = 0\n            var time_to_add = 0\n            for (var i = 0; i < task_dependencies.length; i++) {\n                var dependency_time = 0\n                const dependency = await getTask(task_dependencies[i].gid)\n                if (dependency.custom_fields[2].number_value !== null) {\n                    total_time += dependency.custom_fields[2].number_value\n                }\n                await fillObject(obj, dependency, dependency_time)\n                var sub_task_dependencies = await getDependencies(dependency.gid)\n                if (sub_task_dependencies.length !== 0) {\n                    console.log(obj.children)\n                    var time_to_add = await recursive(sub_task_dependencies, obj.children[obj.children.length - 1])\n                }\n                else {}\n                total_time += time_to_add\n            }\n            obj.total_dependencies_time = total_time\n            resolve(total_time);\n        });\n    }\n    async function test() {\n        var top_task = {}\n        const milestones = await getMilestones();\n        // console.dir(milestones.data)\n        var i;\n        for (i = 0; i < milestones.data.length; i++) {\n            const task = await getTask(milestones.data[i].gid);\n            try {\n                if (task.custom_fields[3].enum_value.name == 'Goal'){\n                    top_task = task\n                    break;\n                }\n            }\n            catch(err){}\n        }\n        const dependencies = await getDependencies(top_task.gid)\n\n        tree.name = top_task.name\n        tree.children = new Array();\n        await fillObject(tree, top_task, 0)\n        await recursive(dependencies, tree)\n        console.log(tree)\n        updateGraph(tree)\n        changeLoadStatus(true)\n        return tree\n    }\n\n    return (\n        <div >\n            {(function () {\n                if (!dataLoaded) {\n                    return <Box > <CircularProgress size={40} />\n                    <Box pt={2}>May take several minutes to load..</Box>\n                    </Box>\n                } else {\n                    return <Tree\n                        data={graph}\n                        nodeRadius={30}\n                        height={2000}\n                        width={1500}/>;\n                }\n            })()}\n        </div>\n    );\n}\n\nexport default Graph;","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/intro.js",["76","77","78"],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data/data.js",[],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/pie_chart_modules_hours.js",["79"],"import React from 'react';\n\nimport PieChart, {\n    Series,\n    Label,\n    Connector,\n    Size,\n    Export\n} from 'devextreme-react/pie-chart';\n\nimport { areas } from '../data/data.js';\n\nclass PieChartHoursModules extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.pointClickHandler = this.pointClickHandler.bind(this);\n        this.legendClickHandler = this.legendClickHandler.bind(this);\n    }\n\n    render() {\n        return (\n            <PieChart\n                id=\"pie\"\n                dataSource={areas}\n                palette=\"Bright\"\n\n                onPointClick={this.pointClickHandler}\n                onLegendClick={this.legendClickHandler}\n            >\n                <Series\n                    argumentField=\"country\"\n                    valueField=\"area\"\n                >\n                    <Label visible={true}>\n                        <Connector visible={true} width={1} />\n                    </Label>\n                </Series>\n\n\n                <Export enabled={false} />\n            </PieChart>\n        );\n    }\n\n    pointClickHandler(e) {\n        this.toggleVisibility(e.target);\n    }\n\n    legendClickHandler(e) {\n        let arg = e.target;\n        let item = e.component.getAllSeries()[0].getPointsByArg(arg)[0];\n\n        this.toggleVisibility(item);\n    }\n\n    toggleVisibility(item) {\n        item.isVisible() ? item.hide() : item.show();\n    }\n}\n\nexport default PieChartHoursModules;",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":55,"column":12,"nodeType":"86","messageId":"87","endLine":55,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":145,"column":8,"nodeType":"90","endLine":145,"endColumn":10,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":178,"column":18,"nodeType":"86","messageId":"94","endLine":178,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":249,"column":25,"nodeType":"97","endLine":249,"endColumn":120},{"ruleId":"95","severity":1,"message":"96","line":250,"column":25,"nodeType":"97","endLine":250,"endColumn":119},{"ruleId":"95","severity":1,"message":"96","line":251,"column":25,"nodeType":"97","endLine":251,"endColumn":119},{"ruleId":"95","severity":1,"message":"96","line":252,"column":25,"nodeType":"97","endLine":252,"endColumn":116},{"ruleId":"95","severity":1,"message":"96","line":253,"column":25,"nodeType":"97","endLine":253,"endColumn":115},{"ruleId":"95","severity":1,"message":"96","line":254,"column":25,"nodeType":"97","endLine":254,"endColumn":116},{"ruleId":"95","severity":1,"message":"96","line":255,"column":25,"nodeType":"97","endLine":255,"endColumn":115},{"ruleId":"95","severity":1,"message":"96","line":256,"column":25,"nodeType":"97","endLine":256,"endColumn":120},{"ruleId":"95","severity":1,"message":"96","line":257,"column":25,"nodeType":"97","endLine":257,"endColumn":117},{"ruleId":"95","severity":1,"message":"96","line":258,"column":25,"nodeType":"97","endLine":258,"endColumn":119},{"ruleId":"84","severity":1,"message":"98","line":2,"column":27,"nodeType":"86","messageId":"87","endLine":2,"endColumn":33},{"ruleId":"84","severity":1,"message":"99","line":2,"column":43,"nodeType":"86","messageId":"87","endLine":2,"endColumn":48},{"ruleId":"84","severity":1,"message":"100","line":2,"column":50,"nodeType":"86","messageId":"87","endLine":2,"endColumn":54},{"ruleId":"84","severity":1,"message":"101","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":19},{"ruleId":"84","severity":1,"message":"102","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":14},{"ruleId":"84","severity":1,"message":"103","line":28,"column":11,"nodeType":"86","messageId":"87","endLine":28,"endColumn":15},{"ruleId":"84","severity":1,"message":"99","line":2,"column":43,"nodeType":"86","messageId":"87","endLine":2,"endColumn":48},{"ruleId":"84","severity":1,"message":"100","line":2,"column":50,"nodeType":"86","messageId":"87","endLine":2,"endColumn":54},{"ruleId":"88","severity":1,"message":"104","line":19,"column":8,"nodeType":"90","endLine":19,"endColumn":15,"suggestions":"105"},{"ruleId":"84","severity":1,"message":"106","line":21,"column":9,"nodeType":"86","messageId":"87","endLine":21,"endColumn":19},{"ruleId":"84","severity":1,"message":"107","line":52,"column":19,"nodeType":"86","messageId":"87","endLine":52,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":75,"column":28,"nodeType":"110","messageId":"111","endLine":75,"endColumn":39},{"ruleId":"92","severity":1,"message":"112","line":88,"column":25,"nodeType":"86","messageId":"94","endLine":88,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":105,"column":59,"nodeType":"115","messageId":"116","endLine":105,"endColumn":61},{"ruleId":"108","severity":1,"message":"109","line":115,"column":25,"nodeType":"110","messageId":"111","endLine":115,"endColumn":36},{"ruleId":"84","severity":1,"message":"101","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":19},{"ruleId":"84","severity":1,"message":"102","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":14},{"ruleId":"84","severity":1,"message":"103","line":29,"column":11,"nodeType":"86","messageId":"87","endLine":29,"endColumn":15},{"ruleId":"84","severity":1,"message":"117","line":7,"column":5,"nodeType":"86","messageId":"87","endLine":7,"endColumn":9},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'hoursPerModuleLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["120"],"no-redeclare","'j' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Legend' is defined but never used.","'Title' is defined but never used.","'Font' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'bull' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'test' and 'tree'. Either include them or remove the dependency array.",["121"],"'milestones' is assigned a value but never used.","'new_key' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'time_to_add' is already defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Size' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [getData]",{"range":"126","text":"127"},"Update the dependencies array to be: [graph, test, tree]",{"range":"128","text":"129"},[3538,3540],"[getData]",[569,576],"[graph, test, tree]"]