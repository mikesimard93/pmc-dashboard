[{"/home/samuel/pmc-dashboard/src/index.js":"1","/home/samuel/pmc-dashboard/src/data_vizualisation/legend.js":"2","/home/samuel/pmc-dashboard/src/data_vizualisation/gauge.js":"3","/home/samuel/pmc-dashboard/src/data_vizualisation/graph.js":"4","/home/samuel/pmc-dashboard/src/App.js":"5","/home/samuel/pmc-dashboard/src/data_vizualisation/to_watch.js":"6","/home/samuel/pmc-dashboard/src/data_vizualisation/hours_members.js":"7","/home/samuel/pmc-dashboard/src/data_vizualisation/pie_chart_modules_hours.js":"8","/home/samuel/pmc-dashboard/src/data_vizualisation/intro.js":"9","/home/samuel/pmc-dashboard/src/data_vizualisation/finance_gauge.js":"10","/home/samuel/zeus/pmc-dashboard/src/index.js":"11","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/to_watch.js":"12","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/gauge.js":"13","/home/samuel/zeus/pmc-dashboard/src/App.js":"14","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/graph.js":"15","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/pie_chart_modules_hours.js":"16","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/hours_members.js":"17","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/legend.js":"18","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/intro.js":"19"},{"size":219,"mtime":1611528722914,"results":"20","hashOfConfig":"21"},{"size":1932,"mtime":1614252995896,"results":"22","hashOfConfig":"21"},{"size":670,"mtime":1611956550509,"results":"23","hashOfConfig":"21"},{"size":14703,"mtime":1615212926750,"results":"24","hashOfConfig":"21"},{"size":17944,"mtime":1618449445872,"results":"25","hashOfConfig":"21"},{"size":1588,"mtime":1611956550509,"results":"26","hashOfConfig":"21"},{"size":2147,"mtime":1611578175904,"results":"27","hashOfConfig":"21"},{"size":1840,"mtime":1611780440383,"results":"28","hashOfConfig":"21"},{"size":1369,"mtime":1611956550509,"results":"29","hashOfConfig":"21"},{"size":1222,"mtime":1614252995896,"results":"30","hashOfConfig":"21"},{"size":219,"mtime":1631711854009,"results":"31","hashOfConfig":"32"},{"size":1588,"mtime":1631711854009,"results":"33","hashOfConfig":"32"},{"size":670,"mtime":1631711854009,"results":"34","hashOfConfig":"32"},{"size":18028,"mtime":1636576450459,"results":"35","hashOfConfig":"32"},{"size":14772,"mtime":1636021766292,"results":"36","hashOfConfig":"32"},{"size":1840,"mtime":1631711854009,"results":"37","hashOfConfig":"32"},{"size":2147,"mtime":1631711854009,"results":"38","hashOfConfig":"32"},{"size":1932,"mtime":1631711854009,"results":"39","hashOfConfig":"32"},{"size":1369,"mtime":1631711854009,"results":"40","hashOfConfig":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1n0uoes",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"vrhyrg",{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/samuel/pmc-dashboard/src/index.js",[],["91","92"],"/home/samuel/pmc-dashboard/src/data_vizualisation/legend.js",[],"/home/samuel/pmc-dashboard/src/data_vizualisation/gauge.js",["93","94","95","96","97","98","99","100","101","102"],"import React from 'react';\nimport { BarGauge, Label, Legend, Export, Title, Font } from 'devextreme-react/bar-gauge';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst format = {\n    type: 'fixedPoint',\n    precision: 1\n};\n\nexport default function Gauge(props) {\n\n    const [gauge, updateGauge] = React.useState([]);\n\n    React.useEffect(() => {\n        updateGauge(props.data)\n    }, [props.data])\n\n    function customizeText({ valueText }) {\n        return `${valueText}`;\n    }\n\n    return (\n        <Typography variant=\"h1\">{gauge}</Typography>\n\n    );\n}",["103","104"],"/home/samuel/pmc-dashboard/src/data_vizualisation/graph.js",[],"/home/samuel/pmc-dashboard/src/App.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import './App.css';\n\n// General Components\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport React from \"react\";\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\n// Introduction Components\nimport Members from './data_vizualisation/hours_members'\nimport Intro from './data_vizualisation/intro'\nimport Legend from './data_vizualisation/legend'\nimport ToWatch from './data_vizualisation/to_watch'\n\n// KPIs Components\nimport GaugePerformance from './data_vizualisation/gauge'\nimport FinancesGauge from './data_vizualisation/finance_gauge'\nimport PieChartHoursModules from './data_vizualisation/pie_chart_modules_hours'\n\n// Graph Tree\nimport Graph from './data_vizualisation/graph'\n\n\n// Pie Charts creation\nconst asana = require('asana');\nconst client = asana.Client.create().useAccessToken('1/130782075921760:ea95e018abbbc064e35274b2f6bc6cce'); // Mike's key\nconst Harvest = require('node-harvest-api')\nconst account_id = 1283808\nconst token = '2297874.pt.O_TLl_k0m8XTbi3eA5iXzoPkKHUftpx4Mp9Fq8zThEI8gqx2DY95hqJbDn5a0l9thCJEug23Z_UBuAh8sifVzw'\nconst app_name = 'PMC dashboard'\nconst harvest = new Harvest(account_id, token, app_name)\n\nvar weekAgo = new Date();\nvar pastDate = weekAgo.getDate() - 8;\n\nweekAgo.setDate(pastDate);\nconsole.log(weekAgo)\nvar startSessionDate = new Date(2021, 0, 10, 0, 0, 0, 0);\nvar today = new Date();\nvar pastToday = today.getDate() -1;\ntoday.setDate(pastToday);\nconsole.log(today)\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\ntoday = dd + '/' + mm + '/' + yyyy;\n\n\nvar yesterday = new Date();\npastDate = yesterday.getDate() - 1;\nyesterday.setDate(pastDate);\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: green[500],\n        },\n    },\n});\n\nfunction App() {\n\n    const [hoursPerMember, updateHoursPerMember] = React.useState([]);\n    const [hoursPerMemberLoading, updateHoursPerMemberLoading] = React.useState(true);\n\n    const [hoursPerModule, updateHoursPerModule] = React.useState([]);\n    const [hoursPerModuleLoading, updateHoursPerModuleLoading] = React.useState(true);\n\n    const [hoursPerType, updateHoursPerType] = React.useState([]);\n    const [hoursPerTypeLoading, updateHoursPerTypeLoading] = React.useState(true);\n\n    const [summaryIntro, updateSummaryIntro] = React.useState([]);\n    const [summaryBullets, updateSummaryBullets] = React.useState([]);\n\n    const [toWatch, updateToWatch] = React.useState([]);\n    const [financeValues, updateFinanceValues] = React.useState([]);\n    const [gauge, updateGauge] = React.useState([]);\n\n    let grossProductData = [{\n        state: 'Michael Simard',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Simon Chamorro',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Samuel Hovington',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Nicolas Morin',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Santiago Moya',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Anthony Marchand',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Antoine Leblanc',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'RaphaÃ«l Labrecque',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'William Dubois',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Ãtienne Gendron',\n        moyenne: 0,\n        actuel: 0,\n    }];\n\n\n    let modules = [{\n        name: 'Admin',\n        area: 0\n    }, {\n        name: 'Bras',\n        area: 0\n    }, {\n        name: 'Propulsion',\n        area: 0\n    }, {\n        name: 'Suspension',\n        area: 0\n    }, {\n        name: 'ContrÃ´le',\n        area: 0\n    }, {\n        name: 'Puissance',\n        area: 0\n    }, {\n        name: 'ChÃ¢ssis',\n        area: 0\n    }, {\n        name: 'Connect 4',\n        area: 0\n    }, {\n        name: 'Science',\n        area: 0\n    }, {\n        name: 'IntÃ©gration',\n        area: 0\n    }];\n\n    let types = [{\n        name: 'Fabrication & Test',\n        area: 0\n    },{\n        name: 'Conception',\n        area: 0\n    },{\n        name: 'Rencontre',\n        area: 0\n    }, {\n        name: 'Gestion',\n        area: 0\n    }, {\n        name: 'ActivitÃ© pÃ©dagogique',\n        area: 0\n    }, {\n        name: 'Travail COROM',\n        area: 0\n    }, {\n        name: 'PrÃ©sentation',\n        area: 0\n    }, {\n        name: 'RÃ©daction',\n        area: 0\n    }, {\n        name: 'Autre (expliquez)',\n        area: 0\n    }];\n\n    React.useEffect(() => {\n        getData()\n    }, [])\n\n    function getTask(task_gid) {\n        return new Promise(async resolve => {\n            if (task_gid !== \"1200124598652249\" && task_gid !== \"1200089123421786\" && task_gid !== \"1199578972033038\" && task_gid !== \"1199594899825045\" && task_gid !== \"1199689394413937\" && task_gid !== \"1199964978561960\" && task_gid !== \"1199930149216598\" && task_gid !== \"1199921124082369\" && task_gid !== \"1199594899825042\" && task_gid !== \"1199906081843675\" && task_gid !== \"1199906081843657\" && task_gid !== \"1199658370254877\") {\n                console.log(task_gid)\n                client.tasks.getTask(task_gid)\n                    .then((result) => {\n                        resolve(result);\n                    });\n            }\n            else {resolve([]);}\n        })\n    }\n    function getInfoTask() {\n        return new Promise(async resolve => {\n            client.tags.getTasksWithTag(\"1199709478483303\")\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function getInfos() {\n        return new Promise(async resolve => {\n            var newest_date = startSessionDate\n            var taskWithInfos\n            var task = await getInfoTask()\n            for (var i = 0; i < task.data.length; i++) {\n                const subTask = await getTask(task.data[i].gid)\n                var d = new Date(subTask.created_at);\n                if (d > newest_date) {\n                    newest_date = d\n                    taskWithInfos = subTask\n                }\n            }\n            console.log(taskWithInfos.notes)\n            var infos = JSON.parse(taskWithInfos.notes);\n            resolve(infos);\n        })\n    }\n\n    function get_hours(entry_list, type, session_date, today) {\n        var diff =(today.getTime() - session_date.getTime()) / 1000;\n        diff /= (60 * 60 * 24 * 7);\n        var week = Math.abs(Math.round(diff));\n\n        for (var i = 0; i < entry_list.length; i++) {\n            for (var j = 0; j < grossProductData.length; j++) {\n                if (entry_list[i].user.name === grossProductData[j].state)\n                {\n                    if (type === \"actuel\"){\n                        grossProductData[j].actuel += entry_list[i].hours\n                    }\n                    else if (type === \"moyenne\") {\n                        grossProductData[j].moyenne += entry_list[i].hours\n                    }\n\n                }\n            }\n        }\n        console.log(grossProductData)\n        if (type === \"moyenne\") {\n            for (var j = 0; j < grossProductData.length; j++) {\n                        grossProductData[j].moyenne /= (week-1) // pour la semaine de relache\n            }\n        }\n\n    }\n\n    function pie_chart(entries) {\n        return new Promise(async resolve => {\n            for (var i = 0; i < entries.length; i++) {\n                console.log(String(i) + \" entry over \" + String(entries.length) + \" entries\")\n                try {\n                    const task = await getTask(entries[i].external_reference.id)\n                    var task_module, task_type\n                    if (task.custom_fields[0].name == \"Harvest\") {\n                        task_type = task.custom_fields[0].enum_value.name\n                        task_module = task.custom_fields[1].enum_value.name\n                    }\n                    else {\n                        task_type = task.custom_fields[1].enum_value.name\n                        task_module = task.custom_fields[0].enum_value.name\n                    }\n                    \n                    for (var j = 0; j < modules.length; j++) {\n                        if (task_module === modules[j].name) {\n                            modules[j].area += entries[i].hours\n                            break;\n                        }\n                \n                    }\n                    for (var k = 0; k < types.length; k++) {\n                        if (task_type == types[k].name) {\n                            types[k].area += entries[i].hours\n                            break;\n                        }\n                    }\n                }\n                catch(err) { console.log(\"pass\")\n                }\n\n            }\n            resolve(types);\n        })\n    }\n\n    function formatData() {\n        return new Promise(resolve => {\n            for (var i =0; i < grossProductData.length; i++) {\n                grossProductData[i].moyenne = Math.round(grossProductData[i].moyenne)\n                grossProductData[i].actuel = Math.round(grossProductData[i].actuel)\n            }\n\n            for (var i =0; i < types.length; i++) {\n                types[i].area = Math.round(types[i].area)\n            }\n\n            for (var i =0; i < modules.length; i++) {\n                modules[i].area = Math.round(modules[i].area)\n            }\n            resolve();\n        })\n    }\n\n    async function getData() {\n\n        const infos = await getInfos()\n        console.log(infos.summary)\n        updateSummaryIntro(infos.summary)\n        updateSummaryBullets(infos.summary_bullets)\n        updateToWatch(infos.important)\n        updateFinanceValues(infos.finance)\n\n\n        let entries = await harvest.time_entries.get({project_id: 24745864})\n        var entry_list_session = []\n        var entry_list_week = []\n        for (var i =0; i < entries.length; i++) {\n            var parts = entries[i].spent_date.split('-');\n            var year = parts[0]\n            var month = parts[1]\n            var day = parts[2]\n            var entry_date = new Date(year, month-1, day)\n            try {\n                if (entry_date > weekAgo  && entry_date < yesterday && entries[i].external_reference.id !== '1199598736876796') {\n                    entry_list_week.push(entries[i])\n                }\n                if (entry_date > startSessionDate && entries[i].external_reference.id !== '1199598736876796') {\n                    entry_list_session.push(entries[i])\n                }\n            }\n            catch(err){}\n            \n        }\n        console.log(entry_list_week)\n        get_hours(entry_list_session, \"actuel\", startSessionDate, yesterday)\n        get_hours(entry_list_session, \"moyenne\", startSessionDate, yesterday)\n        updateHoursPerMember(grossProductData)\n        updateHoursPerMemberLoading(false)\n\n        const array = await pie_chart(entry_list_session)\n        await formatData()\n        updateHoursPerModule(modules)\n        updateHoursPerModuleLoading(false)\n\n        updateHoursPerType(array)\n        updateHoursPerModuleLoading(false)\n        updateHoursPerTypeLoading(false)\n        console.log(array)\n        console.log(modules)\n\n\n\n\n    }\n\n    function updateRatio(ratio){\n        updateGauge(ratio)\n        console.log('to' + gauge)\n    }\n\n\n    return (\n\n        <ThemeProvider theme={theme}>\n        <div className=\"App\">\n            <Grid container direction={'row'}>\n                <Box >\n                    <Box >\n                        <img src={process.env.PUBLIC_URL + './photos_membres/AntoineM.png'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/antoine.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/etienne.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/mike.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/nic.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/raph.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/sam.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/santiago.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/simon.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/william.jpg'} align='left' height=\"150\"/>\n                    </Box>\n                </Box>\n                <Box p={2}>\n                    <Box><Typography align=\"left\" variant=\"h4\" component=\"h2\">\n                        TABLEAU DE BORD ZEUS\n                    </Typography>\n                        <Typography align=\"left\" variant=\"h5\" component=\"h2\">\n                            {today}\n                        </Typography>\n                    </Box>\n                </Box>\n            </Grid>\n\n\n            <Box p={4}>\n                <Grid container alignItems=\"stretch\" direction={'row'} spacing='5'>\n\n                    <Grid item xs={12} sm={12} md={3} lg={3}>\n                        <Box m={0}>\n                            <Paper height=\"100%\"  elevation={4}>\n                                <Intro summary={summaryIntro} bullets={summaryBullets}></Intro>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={3} lg={3}>\n                        <Box  m={0}>\n                            <Paper elevation={4}>\n                                <Box p={0}>\n                                    <ToWatch data={toWatch}></ToWatch>\n                                </Box>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={3} lg={3}>\n                        <Box  m={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Finances\n                                    </Typography>\n                                    <FinancesGauge data={financeValues}></FinancesGauge>\n                                </Box>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={3} lg={3}>\n                        <Box  m={0}>\n                            <Paper elevation={4}>\n                                    <Legend></Legend>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Box mt={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Arbre des jalons\n                                    </Typography>\n                                </Box>\n                                <Box p={2}>\n                                    <Graph fromChildToParentCallback={updateRatio}></Graph>\n                                </Box>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <Box m={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Heures vs Module\n                                    </Typography>\n                                    <PieChartHoursModules data={hoursPerModule} loading={hoursPerModuleLoading}></PieChartHoursModules>\n                                </Box>\n\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <Box m={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Heures vs Type\n                                    </Typography>\n                                    <PieChartHoursModules loading={hoursPerTypeLoading} data={hoursPerType}></PieChartHoursModules>\n                                </Box>\n\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Box mt={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Heures vs Membre\n                                    </Typography>\n                                    <Members data={hoursPerMember} loading={hoursPerMemberLoading}></Members>\n                                </Box>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                </Grid>\n            </Box>\n            <Box p={2}>\n                Tableau gÃ©nÃ©rÃ© le {today}\n            </Box>\n        </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;","/home/samuel/pmc-dashboard/src/data_vizualisation/to_watch.js",["123","124"],"/home/samuel/pmc-dashboard/src/data_vizualisation/hours_members.js",[],"/home/samuel/pmc-dashboard/src/data_vizualisation/pie_chart_modules_hours.js",["125","126"],"import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport PieChart, {\n    Series,\n    Label,\n    Connector,\n    Size,\n    Export\n} from 'devextreme-react/pie-chart';\nimport Box from \"@material-ui/core/Box\";\nimport Tree from \"react-tree-graph\";\n\n\nfunction PieChartHoursModules(props) {\n\n    const [data, updateData] = React.useState([]);\n    const [loading, changeLoadStatus] = React.useState(true);\n\n    // The useEffect will be called at the beginning AND each time the props.Jobs changes\n    // The component will be rendered each time useEffect is executed.\n    React.useEffect(() => {\n        updateData(props.data)\n        changeLoadStatus(props.loading)\n    }, [props.data, props.loading])\n\n        return (\n            <div >\n                {(function () {\n                    if (loading) {\n                        return <Box pt={2}> <CircularProgress size={40} />\n                            <Box pt={2}>May take several minutes to load..</Box>\n                        </Box>\n                    } else {\n                        return <PieChart\n                            id=\"pie\"\n                            dataSource={data}\n                            palette=\"Bright\"\n                        >\n                            <Series\n                                argumentField=\"name\"\n                                valueField=\"area\"\n                            >\n                                <Label visible={true}>\n                                    <Connector visible={true} width={1} />\n                                </Label>\n                            </Series>\n\n\n                            <Export enabled={false} />\n                        </PieChart>;\n                    }\n                })()}\n            </div>\n        );\n}\n\nexport default PieChartHoursModules;","/home/samuel/pmc-dashboard/src/data_vizualisation/intro.js",[],"/home/samuel/pmc-dashboard/src/data_vizualisation/finance_gauge.js",["127","128","129","130","131"],"import React from 'react';\nimport { BarGauge, Label, Export, Legend, Title, Font } from 'devextreme-react/bar-gauge';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst textD = [\"Revenus\", \"DÃ©penses\", \"Balance\"];\n\n\nexport default function OutlinedCard(props) {\n\n    const [values, updateValues] = React.useState([]);\n\n    React.useEffect(() => {\n        updateValues(props.data)\n    }, [props.data])\n\n\n    function customizeTooltip({ valueText }) {\n        return `${valueText} $`;\n    }\n\n    function customizeText(arg) {\n        return getText(arg.item, arg.text);\n    }\n\n    function getText(item, text) {\n        return `${textD[item.index]}`;\n    }\n\n    return (\n        <BarGauge\n            id=\"gauge\"\n            startValue={-25000}\n            endValue={25000}\n            baseValue={0}\n            values={values}\n            palette=\"Ocean\"\n        >\n            <Label customizeText={customizeTooltip} />\n            <Export enabled={false} />\n            <Legend visible={true} customizeText={customizeText} verticalAlignment=\"bottom\" horizontalAlignment=\"center\" />\n        </BarGauge>\n    );\n}\n\n","/home/samuel/zeus/pmc-dashboard/src/index.js",[],["132","133"],"/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/to_watch.js",["134","135"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nexport default function OutlinedCard(props) {\n    const classes = useStyles();\n\n    const [toWatch, updateToWatch] = React.useState([]);\n\n    React.useEffect(() => {\n        updateToWatch(props.data)\n    }, [props.data])\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    ÃlÃ©ments\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" color=\"error\">\n                    IMPORTANTS\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    Ã  surveiller\n                </Typography>\n                <Typography variant=\"body2\"  align=\"left\" component=\"p\">\n                    <ul>{toWatch.map(bullet => <li> {bullet} </li>)}</ul>\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}",["136","137"],"/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/gauge.js",["138","139","140","141","142","143","144","145","146","147"],"/home/samuel/zeus/pmc-dashboard/src/App.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import './App.css';\n\n// General Components\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport React from \"react\";\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\n// Introduction Components\nimport Members from './data_vizualisation/hours_members'\nimport Intro from './data_vizualisation/intro'\nimport Legend from './data_vizualisation/legend'\nimport ToWatch from './data_vizualisation/to_watch'\n\n// KPIs Components\nimport GaugePerformance from './data_vizualisation/gauge'\nimport FinancesGauge from './data_vizualisation/finance_gauge'\nimport PieChartHoursModules from './data_vizualisation/pie_chart_modules_hours'\n\n// Graph Tree\nimport Graph from './data_vizualisation/graph'\n\n\n// Pie Charts creation\nconst asana = require('asana');\nconst client = asana.Client.create().useAccessToken('1/130782075921760:ea95e018abbbc064e35274b2f6bc6cce'); // Mike's key\nconst Harvest = require('node-harvest-api')\nconst account_id = 1283808\nconst token = '2297874.pt.O_TLl_k0m8XTbi3eA5iXzoPkKHUftpx4Mp9Fq8zThEI8gqx2DY95hqJbDn5a0l9thCJEug23Z_UBuAh8sifVzw'\nconst app_name = 'PMC dashboard'\nconst harvest = new Harvest(account_id, token, app_name)\n\nvar weekAgo = new Date();\nvar pastDate = weekAgo.getDate() - (7); \n\nweekAgo.setDate(pastDate);\nconsole.log(weekAgo)\nvar startSessionDate = new Date(2021, 7, 30, 0, 0, 0, 0);\nvar today = new Date();\nvar pastToday = today.getDate();\ntoday.setDate(pastToday);\nconsole.log(today)\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\ntoday = dd + '/' + mm + '/' + yyyy;\n\n\nvar yesterday = new Date();\npastDate = yesterday.getDate(); // change here for closest date\nyesterday.setDate(pastDate);\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: green[500],\n        },\n    },\n});\n\nfunction App() {\n\n    const [hoursPerMember, updateHoursPerMember] = React.useState([]);\n    const [hoursPerMemberLoading, updateHoursPerMemberLoading] = React.useState(true);\n\n    const [hoursPerModule, updateHoursPerModule] = React.useState([]);\n    const [hoursPerModuleLoading, updateHoursPerModuleLoading] = React.useState(true);\n\n    const [hoursPerType, updateHoursPerType] = React.useState([]);\n    const [hoursPerTypeLoading, updateHoursPerTypeLoading] = React.useState(true);\n\n    const [summaryIntro, updateSummaryIntro] = React.useState([]);\n    const [summaryBullets, updateSummaryBullets] = React.useState([]);\n\n    const [toWatch, updateToWatch] = React.useState([]);\n    const [financeValues, updateFinanceValues] = React.useState([]);\n    const [gauge, updateGauge] = React.useState([]);\n\n    let grossProductData = [{\n        state: 'Michael Simard',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Simon Chamorro',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Samuel Hovington',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Nicolas Morin',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Santiago Moya',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Anthony Marchand',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Antoine Leblanc',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'RaphaÃ«l Labrecque',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'William Dubois',\n        moyenne: 0,\n        actuel: 0,\n    }, {\n        state: 'Ãtienne Gendron',\n        moyenne: 0,\n        actuel: 0,\n    }];\n\n\n    let modules = [{\n        name: 'Admin',\n        area: 0\n    }, {\n        name: 'Bras',\n        area: 0\n    }, {\n        name: 'Suspension',\n        area: 0\n    }, {\n        name: 'Propulsion',\n        area: 0\n    }, {\n        name: 'ContrÃ´le',\n        area: 0\n    }, {\n        name: 'Puissance',\n        area: 0\n    }, {\n        name: 'ChÃ¢ssis',\n        area: 0\n    }, {\n        name: 'Science',\n        area: 0\n    }, {\n        name: 'Connect 4',\n        area: 0\n    }, {\n        name: 'IntÃ©gration',\n        area: 0\n    }];\n\n    let types = [{\n        name: 'Conception',\n        area: 0\n    },{\n        name: 'Fabrication & Test',\n        area: 0\n    },{\n        name: 'PrÃ©sentation',\n        area: 0\n    }, {\n        name: 'Rencontre',\n        area: 0\n    }, {\n        name: 'ActivitÃ© pÃ©dagogique',\n        area: 0\n    }, {\n        name: 'Gestion',\n        area: 0\n    }, {\n        name: 'RÃ©daction',\n        area: 0\n    }, {\n        name: 'Travail COROM',\n        area: 0\n    }, {\n        name: 'Autre (expliquez)',\n        area: 0\n    }];\n\n    React.useEffect(() => {\n        getData()\n    }, [])\n\n    function getTask(task_gid) {\n        return new Promise(async resolve => {\n            if (task_gid !== \"1201355110642389\" && task_gid !== \"1200124598652249\" && task_gid !== \"1200089123421786\" && task_gid !== \"1199578972033038\" && task_gid !== \"1199594899825045\" && task_gid !== \"1199689394413937\" && task_gid !== \"1199964978561960\" && task_gid !== \"1199930149216598\" && task_gid !== \"1199921124082369\" && task_gid !== \"1199594899825042\" && task_gid !== \"1199906081843675\" && task_gid !== \"1199906081843657\" && task_gid !== \"1199658370254877\") {\n                console.log(task_gid)\n                client.tasks.getTask(task_gid)\n                    .then((result) => {\n                        resolve(result);\n                    });\n            }\n            else {resolve([]);}\n        })\n    }\n    function getInfoTask() {\n        return new Promise(async resolve => {\n            client.tags.getTasksWithTag(\"1199709478483303\")\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function getInfos() {\n        return new Promise(async resolve => {\n            var newest_date = startSessionDate\n            var taskWithInfos\n            var task = await getInfoTask()\n            for (var i = 0; i < task.data.length; i++) {\n                const subTask = await getTask(task.data[i].gid)\n                var d = new Date(subTask.created_at);\n                if (d > newest_date) {\n                    newest_date = d\n                    taskWithInfos = subTask\n                }\n            }\n            console.log(taskWithInfos.notes)\n            var infos = JSON.parse(taskWithInfos.notes);\n            resolve(infos);\n        })\n    }\n\n    function get_hours(entry_list, type, session_date, today) {\n        var diff =(today.getTime() - session_date.getTime()) / 1000;\n        diff /= (60 * 60 * 24 * 7);\n        var week = Math.abs(Math.round(diff));\n        console.log(week)\n\n        for (var i = 0; i < entry_list.length; i++) {\n            for (var j = 0; j < grossProductData.length; j++) {\n                if (entry_list[i].user.name === grossProductData[j].state)\n                {\n                    if (type === \"actuel\"){\n                        grossProductData[j].actuel += entry_list[i].hours\n                    }\n                    else if (type === \"moyenne\") {\n                        grossProductData[j].moyenne += entry_list[i].hours\n                    }\n\n                }\n            }\n        }\n        console.log(grossProductData)\n        if (type === \"moyenne\") {\n            for (var j = 0; j < grossProductData.length; j++) {\n                        grossProductData[j].moyenne /= (week) // pour la semaine de relache\n            }\n        }\n\n    }\n\n    function pie_chart(entries) {\n        return new Promise(async resolve => {\n            for (var i = 0; i < entries.length; i++) {\n                console.log(String(i) + \" entry over \" + String(entries.length) + \" entries\")\n                try {\n                    const task = await getTask(entries[i].external_reference.id)\n                    var task_module, task_type\n                    if (task.custom_fields[0].name == \"Harvest\") {\n                        task_type = task.custom_fields[0].enum_value.name\n                        task_module = task.custom_fields[1].enum_value.name\n                    }\n                    else {\n                        task_type = task.custom_fields[1].enum_value.name\n                        task_module = task.custom_fields[0].enum_value.name\n                    }\n                    \n                    for (var j = 0; j < modules.length; j++) {\n                        if (task_module === modules[j].name) {\n                            modules[j].area += entries[i].hours\n                            break;\n                        }\n                \n                    }\n                    for (var k = 0; k < types.length; k++) {\n                        if (task_type == types[k].name) {\n                            types[k].area += entries[i].hours\n                            break;\n                        }\n                    }\n                }\n                catch(err) { console.log(\"pass\")\n                }\n\n            }\n            resolve(types);\n        })\n    }\n\n    function formatData() {\n        return new Promise(resolve => {\n            for (var i =0; i < grossProductData.length; i++) {\n                grossProductData[i].moyenne = Math.round(grossProductData[i].moyenne)\n                grossProductData[i].actuel = Math.round(grossProductData[i].actuel)\n            }\n\n            for (var i =0; i < types.length; i++) {\n                types[i].area = Math.round(types[i].area)\n            }\n\n            for (var i =0; i < modules.length; i++) {\n                modules[i].area = Math.round(modules[i].area)\n            }\n            resolve();\n        })\n    }\n\n    async function getData() {\n\n        const infos = await getInfos()\n        console.log(infos.summary)\n        updateSummaryIntro(infos.summary)\n        updateSummaryBullets(infos.summary_bullets)\n        updateToWatch(infos.important)\n        updateFinanceValues(infos.finance)\n\n\n        let entries = await harvest.time_entries.get({project_id: 24745864})\n        var entry_list_session = []\n        var entry_list_week = []\n        for (var i =0; i < entries.length; i++) {\n            var parts = entries[i].spent_date.split('-');\n            var year = parts[0]\n            var month = parts[1]\n            var day = parts[2]\n            var entry_date = new Date(year, month-1, day)\n            try {\n                if (entry_date > weekAgo  && entry_date < yesterday && entries[i].external_reference.id !== '1199598736876796') {\n                    entry_list_week.push(entries[i])\n                }\n                if (entry_date > startSessionDate && entries[i].external_reference.id !== '1199598736876796') {\n                    entry_list_session.push(entries[i])\n                }\n            }\n            catch(err){}\n            \n        }\n        console.log(entry_list_week)\n        get_hours(entry_list_week, \"actuel\", startSessionDate, yesterday)\n        get_hours(entry_list_session, \"moyenne\", startSessionDate, yesterday)\n        updateHoursPerMember(grossProductData)\n        updateHoursPerMemberLoading(false)\n\n        const array = await pie_chart(entry_list_session)\n        await formatData()\n        updateHoursPerModule(modules)\n        updateHoursPerModuleLoading(false)\n\n        updateHoursPerType(array)\n        updateHoursPerModuleLoading(false)\n        updateHoursPerTypeLoading(false)\n        console.log(array)\n        console.log(modules)\n\n\n\n\n    }\n\n    function updateRatio(ratio){\n        updateGauge(ratio)\n        console.log('to' + gauge)\n    }\n\n\n    return (\n\n        <ThemeProvider theme={theme}>\n        <div className=\"App\">\n            <Grid container direction={'row'}>\n                <Box >\n                    <Box >\n                        <img src={process.env.PUBLIC_URL + './photos_membres/AntoineM.png'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/antoine.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/etienne.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/mike.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/nic.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/raph.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/sam.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/santiago.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/simon.jpg'} align='left' height=\"150\"/>\n                        <img src={process.env.PUBLIC_URL + './photos_membres/william.jpg'} align='left' height=\"150\"/>\n                    </Box>\n                </Box>\n                <Box p={2}>\n                    <Box><Typography align=\"left\" variant=\"h4\" component=\"h2\">\n                        TABLEAU DE BORD ZEUS\n                    </Typography>\n                        <Typography align=\"left\" variant=\"h5\" component=\"h2\">\n                            {today}\n                        </Typography>\n                    </Box>\n                </Box>\n            </Grid>\n\n\n            <Box p={4}>\n                <Grid container alignItems=\"stretch\" direction={'row'} spacing='5'>\n\n                    <Grid item xs={12} sm={12} md={3} lg={3}>\n                        <Box m={0}>\n                            <Paper height=\"100%\"  elevation={4}>\n                                <Intro summary={summaryIntro} bullets={summaryBullets}></Intro>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={3} lg={3}>\n                        <Box  m={0}>\n                            <Paper elevation={4}>\n                                <Box p={0}>\n                                    <ToWatch data={toWatch}></ToWatch>\n                                </Box>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={3} lg={3}>\n                        <Box  m={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Finances\n                                    </Typography>\n                                    <FinancesGauge data={financeValues}></FinancesGauge>\n                                </Box>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={3} lg={3}>\n                        <Box  m={0}>\n                            <Paper elevation={4}>\n                                    <Legend></Legend>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Box mt={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Arbre des jalons\n                                    </Typography>\n                                </Box>\n                                <Box p={2}>\n                                    <Graph fromChildToParentCallback={updateRatio}></Graph>\n                                </Box>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <Box m={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Heures vs Module\n                                    </Typography>\n                                    <PieChartHoursModules data={hoursPerModule} loading={hoursPerModuleLoading}></PieChartHoursModules>\n                                </Box>\n\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                        <Box m={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Heures vs Type\n                                    </Typography>\n                                    <PieChartHoursModules loading={hoursPerTypeLoading} data={hoursPerType}></PieChartHoursModules>\n                                </Box>\n\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                        <Box mt={0}>\n                            <Paper elevation={4}>\n                                <Box p={2}>\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        Heures vs Membre\n                                    </Typography>\n                                    <Members data={hoursPerMember} loading={hoursPerMemberLoading}></Members>\n                                </Box>\n                            </Paper>\n                        </Box>\n                    </Grid>\n\n                </Grid>\n            </Box>\n            <Box p={2}>\n                Tableau gÃ©nÃ©rÃ© le {today}\n            </Box>\n        </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/graph.js",["166","167","168","169","170","171","172","173","174","175","176"],"import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport '../App.css';\nimport Tree from 'react-d3-tree';\nimport {Typography} from \"@material-ui/core\";\n\nconst dataa =\n{\n    \"name\": \"CEO\",\n    \"children\": [\n    {\n        \"name\": \"Manager\",\n        \"attributes\": {\n            \"department\": \"Production\"\n        },\n        \"children\": [\n            {\n                \"name\": \"Foreman\",\n                \"attributes\": {\n                    \"department\": \"Fabrication\"\n                },\n                \"children\": [\n                    {\n                        \"name\": \"Workers\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"Foreman\",\n                \"attributes\": {\n                    \"department\": \"Assembly\"\n                },\n                \"children\": [\n                    {\n                        \"name\": \"Workers\"\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"name\": \"Manager\",\n        \"attributes\": {\n            \"department\": \"Marketing\"\n        },\n        \"children\": [\n            {\n                \"name\": \"Sales Officer\",\n                \"attributes\": {\n                    \"department\": \"A\"\n                },\n                \"children\": [\n                    {\n                        \"name\": \"Salespeople\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"Sales Officer\",\n                \"attributes\": {\n                    \"department\": \"B\"\n                },\n                \"children\": [\n                    {\n                        \"name\": \"Salespeople\"\n                    }\n                ]\n            }\n        ]\n    }\n]\n}\n\nconst asana = require('asana');\nconst client = asana.Client.create().useAccessToken('1/130782075921760:ea95e018abbbc064e35274b2f6bc6cce'); // Mike's key\n\nconst Harvest = require('node-harvest-api')\nconst account_id = 1283808\nconst token = '2297874.pt.O_TLl_k0m8XTbi3eA5iXzoPkKHUftpx4Mp9Fq8zThEI8gqx2DY95hqJbDn5a0l9thCJEug23Z_UBuAh8sifVzw'\nconst app_name = 'PMC dashboard'\nconst harvest = new Harvest(account_id, token, app_name)\nlet entries = []\nvar entry_list_session = []\nvar startSessionDate = new Date(2021, 0, 10, 0, 0, 0, 0);\nvar today = new Date();\n\nfunction Graph(props) {\n    const [graph, updateGraph] = React.useState([]);\n    const [dataLoaded, changeLoadStatus] = React.useState(false);\n    var tree = {}\n    React.useEffect(() => {\n        test()\n    }, [])\n\n\n\n    const containerStyles = {\n        width: \"100vw\",\n        height: \"800px\"\n    };\n\n    const useCenteredTree = (defaultTranslate = { x: 0, y: 0 }) => {\n        const [translate, setTranslate] = React.useState(defaultTranslate);\n        const containerRef = React.useCallback((containerElem) => {\n            if (containerElem !== null) {\n                const { width, height } = containerElem.getBoundingClientRect();\n                setTranslate({ x: width / 2, y: height / 2 });\n            }\n        }, []);\n        return [translate, containerRef];\n    };\n\n    const [translate, containerRef] = useCenteredTree();\n    const nodeSize = { x: 275, y: 300 };\n    const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: 20 };\n\n\n    var milestones = {}\n    function getMilestones() {\n        return new Promise(resolve => {\n            client.tasks.searchInWorkspace('622159997203998', {'resource_subtype': 'milestone'})\n                // ,opt_fields=['due_on','assignee','completed_at','custom_fields','name', 'created_at', 'resource_subtype'], opt_pretty=True\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function getTask(task_gid) {\n        return new Promise(resolve => {\n            client.tasks.getTask(task_gid)\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n    function getSubtask(task_gid) {\n        return new Promise(resolve => {\n            client.tasks.subtasks(task_gid)\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function getDependencies(task_gid) {\n        return new Promise(resolve => {\n            client.tasks.dependencies(task_gid)\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function fillObject(obj, task) {\n        return new Promise(resolve => {\n            const new_key = task.name\n            console.log(task.gid)\n            console.log(task.name)\n            obj.children.push( {\n                gProps: {\n                    className: 'red-node'\n                },\n                attributes: {\n                    Ratio: 0,\n                    Time: 0,\n                    Due: \"\",\n                },\n                nodeSvgShape: {\n                    shape: 'circle',\n                    shapeProps: {\n                        r: 10,\n                        fill: 'blue',\n                    },\n                },\n                rootNodeClassName: 'node__branch',\n                name: task.name,\n                gid: task.gid,\n                total_dependencies_time: 0.0,\n                due_on: task.due_on,\n                created_at: task.created_at,\n                estimated_time: task.custom_fields[2].number_value,\n                completed_at: task.completed_at,\n                module: task.custom_fields[0].enum_value.name,\n                type: task.resource_subtype,\n                clocked_time: 0\n            });\n\n            resolve(obj);\n        })\n    }\n\n    function recursive(task_dependencies, obj) {\n        return new Promise(async resolve => {\n            obj.children = new Array();\n            var time = {\n                        planned_time: 0,\n                        clocked_time: 0\n            }\n            var time_under = {\n                            planned_time: 0,\n                            clocked_time: 0\n            }\n            for (var i = 0; i < task_dependencies.length; i++) {\n                console.log(task_dependencies[i].name)\n                var task_name_list = []\n                const asana_sub_task = await getSubtask(task_dependencies[i].gid)\n                for (var k = 0; k < asana_sub_task.data.length; k++) {\n                    task_name_list.push(asana_sub_task.data[k].name)\n                }\n                task_name_list.push(task_dependencies[i].name)\n                for (var j = 0; j < entry_list_session.length; j++) {\n                    if (task_name_list.includes(entry_list_session[j].notes)) {\n                        time.clocked_time += entry_list_session[j].hours\n                    }\n                }\n\n                const dependency = await getTask(task_dependencies[i].gid)\n                if (dependency.custom_fields[2].number_value !== null) {\n                    time.planned_time += dependency.custom_fields[2].number_value\n                }\n                await fillObject(obj, dependency)\n                var sub_task_dependencies = await getDependencies(dependency.gid)\n                if (sub_task_dependencies.length !== 0) {\n                    var time_under = await recursive(sub_task_dependencies, obj.children[obj.children.length - 1])\n                }\n                else {}\n                time.planned_time += time_under.planned_time\n                time.clocked_time += time_under.clocked_time\n            }\n            obj.total_dependencies_time = time.planned_time\n            obj.clocked_time = time.clocked_time\n\n\n            var dueDate = new Date(obj.due_on)\n            var dueTime = dueDate.getTime()\n            var startTime = startSessionDate.getTime()\n            var todayTime = today.getTime()\n\n            var temp = (todayTime - startTime)/(dueTime - startTime)\n\n            console.log(temp)\n            console.log(obj.total_dependencies_time)\n            console.log(obj.clocked_time)\n            var ratio = obj.clocked_time/(temp * obj.total_dependencies_time + + Number.EPSILON)\n            var ratioRounded = Math.round((ratio + Number.EPSILON) * 100) / 100\n\n            console.log(ratio)\n            obj.attributes.Time = ratioRounded/(temp)\n            obj.attributes.Due = obj.due_on\n            console.log(obj.name)\n            console.log(obj.attributes.Time)\n\n\n            resolve(time);\n        });\n    }\n\n    function keepMilestoneOnly(obj) {\n        return new Promise(async resolve => {\n            console.log(obj)\n            obj.attributes.Time = obj.attributes.Time.toFixed(2)\n            console.log(obj.name)\n            var remove_list = []\n            try {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (obj.children[i].type !== \"milestone\") {\n                        delete obj.children[i]\n                    }\n                    else {\n                        await keepMilestoneOnly(obj.children[i])\n                    }\n                }\n                const result = obj.children.filter(child => child !== undefined)\n                obj.children = result\n                console.log(result)\n                \n                if (obj.children.length == 0) {\n                    delete obj.children\n                }\n            }\n            catch(err){}\n            \n            resolve(obj);\n        });\n    }\n    async function test() {\n        var top_task\n        const milestones = await getMilestones();\n        entries = await harvest.time_entries.get({project_id: 24745864})\n        for (var i =0; i < entries.length; i++) {\n            var parts = entries[i].spent_date.split('-');\n            var year = parts[0]\n            var month = parts[1]\n            var day = parts[2]\n            var entry_date = new Date(year, month-1, day)\n            try {\n                if (entry_date > startSessionDate && entries[i].external_reference.id !== '1199598736876796') {\n                entry_list_session.push(entries[i])\n                }\n            }\n            catch(err){}\n            \n        }\n        for (var i = 0; i < milestones.data.length; i++) {\n            const task = await getTask(milestones.data[i].gid);\n            try {\n                if (task.custom_fields[3].enum_value.name == 'Goal'){\n                    top_task = task\n                    break;\n                }\n            }\n            catch(err){}\n        }\n        const dependencies = await getDependencies(top_task.gid)\n\n        tree.name = top_task.name\n        tree.children = new Array();\n        await fillObject(tree, top_task)\n        tree.attributes = {\n            Ratio: 0,\n            Time: 0,\n            Due: \"\",\n        }\n        tree.completed_at = null\n        tree.due_on = top_task.due_on\n        await recursive(dependencies, tree)\n        console.log(tree)\n        let milestonesTree = JSON.parse(JSON.stringify(tree))\n        await keepMilestoneOnly(milestonesTree)\n        // console.log(JSON.stringify(tree))\n        console.log(milestonesTree)\n        updateGraph(milestonesTree)\n        changeLoadStatus(true)\n        var ratio = milestonesTree.clocked_time/milestonesTree.total_dependencies_time\n        var ratioRounded = Math.round((ratio + Number.EPSILON) * 100) / 100\n        props.fromChildToParentCallback(ratioRounded)\n        return milestonesTree\n    }\n\n    const renderForeignObjectNode = ({\n                                          nodeDatum,\n                                          toggleNode,\n                                          foreignObjectProps\n                                      }) => (\n        <g>\n            <circle r={15}></circle>\n            {/* `foreignObject` requires width & height to be explicitly set. */}\n            <foreignObject {...foreignObjectProps}>\n                <div style={{ border: \"1px solid black\", backgroundColor: \"#dedede\" }}>\n                    {(function () {\n                        // !dataLoaded\n                        if (nodeDatum.completed_at !== null) {\n                            return <Typography variant=\"h6\" color=\"primary\">COMPLÃTÃ</Typography>\n                        }\n                        else if (nodeDatum.completed_at == null && (nodeDatum.attributes.Time < 0.5 || nodeDatum.attributes.Time >1.5)) {\n                            return <Typography variant=\"h6\" color=\"error\">Ã SURVEILLER</Typography>\n                        } \n                        else {\n                            return <Typography variant=\"h5\" color=\"success\">OK</Typography>\n                        }\n                    })()}\n\n                    <h3 style={{ textAlign: \"center\" }}>{nodeDatum.name}</h3>\n\n                    {(function () {\n                        // !dataLoaded\n                        if (nodeDatum.completed_at == null) {\n                            return <h1 style={{ textAlign: \"center\" }}>{nodeDatum.attributes.Time}</h1>\n                        }\n                    })()}\n\n                    {(function () {\n                        // !dataLoaded\n                        if (nodeDatum.completed_at == null) {\n                            return <h3 style={{ textAlign: \"center\" }}>DÃ» le {nodeDatum.attributes.Due}</h3>\n                        }\n                    })()}\n\n                    {nodeDatum.children && (\n                        <button style={{ width: \"100%\" }} onClick={toggleNode}>\n                            {nodeDatum.__rd3t.collapsed ? \"Expand\" : \"Collapse\"}\n                        </button>\n                    )}\n                </div>\n            </foreignObject>\n        </g>\n    );\n\n    return (\n        <div >\n            {(function () {\n                // !dataLoaded\n                if (!dataLoaded) {\n                    return <Box > <CircularProgress size={40} />\n                    <Box pt={2}>May take several minutes to load..</Box>\n                    </Box>\n                } else {\n                    return (\n                        <div style={containerStyles} ref={containerRef}>\n                            <Tree\n                                data={graph}\n                                translate={translate}\n                                nodeSize={nodeSize}\n                                renderCustomNodeElement={(rd3tProps) =>\n                                    renderForeignObjectNode({ ...rd3tProps, foreignObjectProps })\n                                }\n                                orientation=\"vertical\"\n                            />\n                        </div>\n                    );\n                }\n            })()}\n        </div>\n    );\n}\n\nexport default Graph;\n//\n// <Tree\n//     data={graph}\n//     nodeRadius={30}\n//     height={2000}\n//     width={1500}\n//     animated\n//     textProps={{ dy: -10.5 }}/>","/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/pie_chart_modules_hours.js",["177","178"],["179","180"],"/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/hours_members.js",[],"/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/legend.js",[],"/home/samuel/zeus/pmc-dashboard/src/data_vizualisation/intro.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":18},{"ruleId":"185","severity":1,"message":"189","line":2,"column":20,"nodeType":"187","messageId":"188","endLine":2,"endColumn":25},{"ruleId":"185","severity":1,"message":"190","line":2,"column":27,"nodeType":"187","messageId":"188","endLine":2,"endColumn":33},{"ruleId":"185","severity":1,"message":"191","line":2,"column":35,"nodeType":"187","messageId":"188","endLine":2,"endColumn":41},{"ruleId":"185","severity":1,"message":"192","line":2,"column":43,"nodeType":"187","messageId":"188","endLine":2,"endColumn":48},{"ruleId":"185","severity":1,"message":"193","line":2,"column":50,"nodeType":"187","messageId":"188","endLine":2,"endColumn":54},{"ruleId":"185","severity":1,"message":"194","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":12},{"ruleId":"185","severity":1,"message":"195","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"196","line":7,"column":7,"nodeType":"187","messageId":"188","endLine":7,"endColumn":13},{"ruleId":"185","severity":1,"message":"197","line":20,"column":14,"nodeType":"187","messageId":"188","endLine":20,"endColumn":27},{"ruleId":"181","replacedBy":"198"},{"ruleId":"183","replacedBy":"199"},{"ruleId":"185","severity":1,"message":"200","line":9,"column":26,"nodeType":"187","messageId":"188","endLine":9,"endColumn":36},{"ruleId":"185","severity":1,"message":"201","line":19,"column":8,"nodeType":"187","messageId":"188","endLine":19,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":189,"column":8,"nodeType":"204","endLine":189,"endColumn":10,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":252,"column":22,"nodeType":"187","messageId":"208","endLine":252,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":266,"column":52,"nodeType":"211","messageId":"212","endLine":266,"endColumn":54},{"ruleId":"209","severity":1,"message":"210","line":283,"column":39,"nodeType":"211","messageId":"212","endLine":283,"endColumn":41},{"ruleId":"206","severity":1,"message":"213","line":304,"column":22,"nodeType":"187","messageId":"208","endLine":304,"endColumn":23},{"ruleId":"206","severity":1,"message":"213","line":308,"column":22,"nodeType":"187","messageId":"208","endLine":308,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":380,"column":25,"nodeType":"216","endLine":380,"endColumn":120},{"ruleId":"214","severity":1,"message":"215","line":381,"column":25,"nodeType":"216","endLine":381,"endColumn":119},{"ruleId":"214","severity":1,"message":"215","line":382,"column":25,"nodeType":"216","endLine":382,"endColumn":119},{"ruleId":"214","severity":1,"message":"215","line":383,"column":25,"nodeType":"216","endLine":383,"endColumn":116},{"ruleId":"214","severity":1,"message":"215","line":384,"column":25,"nodeType":"216","endLine":384,"endColumn":115},{"ruleId":"214","severity":1,"message":"215","line":385,"column":25,"nodeType":"216","endLine":385,"endColumn":116},{"ruleId":"214","severity":1,"message":"215","line":386,"column":25,"nodeType":"216","endLine":386,"endColumn":115},{"ruleId":"214","severity":1,"message":"215","line":387,"column":25,"nodeType":"216","endLine":387,"endColumn":120},{"ruleId":"214","severity":1,"message":"215","line":388,"column":25,"nodeType":"216","endLine":388,"endColumn":117},{"ruleId":"214","severity":1,"message":"215","line":389,"column":25,"nodeType":"216","endLine":389,"endColumn":119},{"ruleId":"185","severity":1,"message":"217","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"218","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"219","line":8,"column":5,"nodeType":"187","messageId":"188","endLine":8,"endColumn":9},{"ruleId":"185","severity":1,"message":"220","line":12,"column":8,"nodeType":"187","messageId":"188","endLine":12,"endColumn":12},{"ruleId":"185","severity":1,"message":"192","line":2,"column":43,"nodeType":"187","messageId":"188","endLine":2,"endColumn":48},{"ruleId":"185","severity":1,"message":"193","line":2,"column":50,"nodeType":"187","messageId":"188","endLine":2,"endColumn":54},{"ruleId":"185","severity":1,"message":"194","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":12},{"ruleId":"185","severity":1,"message":"195","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"221","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":18},{"ruleId":"181","replacedBy":"222"},{"ruleId":"183","replacedBy":"223"},{"ruleId":"185","severity":1,"message":"217","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"218","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"181","replacedBy":"224"},{"ruleId":"183","replacedBy":"225"},{"ruleId":"185","severity":1,"message":"186","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":18},{"ruleId":"185","severity":1,"message":"189","line":2,"column":20,"nodeType":"187","messageId":"188","endLine":2,"endColumn":25},{"ruleId":"185","severity":1,"message":"190","line":2,"column":27,"nodeType":"187","messageId":"188","endLine":2,"endColumn":33},{"ruleId":"185","severity":1,"message":"191","line":2,"column":35,"nodeType":"187","messageId":"188","endLine":2,"endColumn":41},{"ruleId":"185","severity":1,"message":"192","line":2,"column":43,"nodeType":"187","messageId":"188","endLine":2,"endColumn":48},{"ruleId":"185","severity":1,"message":"193","line":2,"column":50,"nodeType":"187","messageId":"188","endLine":2,"endColumn":54},{"ruleId":"185","severity":1,"message":"194","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":12},{"ruleId":"185","severity":1,"message":"195","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"196","line":7,"column":7,"nodeType":"187","messageId":"188","endLine":7,"endColumn":13},{"ruleId":"185","severity":1,"message":"197","line":20,"column":14,"nodeType":"187","messageId":"188","endLine":20,"endColumn":27},{"ruleId":"185","severity":1,"message":"200","line":9,"column":26,"nodeType":"187","messageId":"188","endLine":9,"endColumn":36},{"ruleId":"185","severity":1,"message":"201","line":19,"column":8,"nodeType":"187","messageId":"188","endLine":19,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":189,"column":8,"nodeType":"204","endLine":189,"endColumn":10,"suggestions":"226"},{"ruleId":"206","severity":1,"message":"207","line":253,"column":22,"nodeType":"187","messageId":"208","endLine":253,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":267,"column":52,"nodeType":"211","messageId":"212","endLine":267,"endColumn":54},{"ruleId":"209","severity":1,"message":"210","line":284,"column":39,"nodeType":"211","messageId":"212","endLine":284,"endColumn":41},{"ruleId":"206","severity":1,"message":"213","line":305,"column":22,"nodeType":"187","messageId":"208","endLine":305,"endColumn":23},{"ruleId":"206","severity":1,"message":"213","line":309,"column":22,"nodeType":"187","messageId":"208","endLine":309,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":381,"column":25,"nodeType":"216","endLine":381,"endColumn":120},{"ruleId":"214","severity":1,"message":"215","line":382,"column":25,"nodeType":"216","endLine":382,"endColumn":119},{"ruleId":"214","severity":1,"message":"215","line":383,"column":25,"nodeType":"216","endLine":383,"endColumn":119},{"ruleId":"214","severity":1,"message":"215","line":384,"column":25,"nodeType":"216","endLine":384,"endColumn":116},{"ruleId":"214","severity":1,"message":"215","line":385,"column":25,"nodeType":"216","endLine":385,"endColumn":115},{"ruleId":"214","severity":1,"message":"215","line":386,"column":25,"nodeType":"216","endLine":386,"endColumn":116},{"ruleId":"214","severity":1,"message":"215","line":387,"column":25,"nodeType":"216","endLine":387,"endColumn":115},{"ruleId":"214","severity":1,"message":"215","line":388,"column":25,"nodeType":"216","endLine":388,"endColumn":120},{"ruleId":"214","severity":1,"message":"215","line":389,"column":25,"nodeType":"216","endLine":389,"endColumn":117},{"ruleId":"214","severity":1,"message":"215","line":390,"column":25,"nodeType":"216","endLine":390,"endColumn":119},{"ruleId":"185","severity":1,"message":"227","line":8,"column":7,"nodeType":"187","messageId":"188","endLine":8,"endColumn":12},{"ruleId":"202","severity":1,"message":"228","line":94,"column":8,"nodeType":"204","endLine":94,"endColumn":10,"suggestions":"229"},{"ruleId":"185","severity":1,"message":"230","line":119,"column":9,"nodeType":"187","messageId":"188","endLine":119,"endColumn":19},{"ruleId":"185","severity":1,"message":"231","line":158,"column":19,"nodeType":"187","messageId":"188","endLine":158,"endColumn":26},{"ruleId":"232","severity":1,"message":"233","line":196,"column":28,"nodeType":"234","messageId":"235","endLine":196,"endColumn":39},{"ruleId":"206","severity":1,"message":"236","line":226,"column":25,"nodeType":"187","messageId":"208","endLine":226,"endColumn":35},{"ruleId":"185","severity":1,"message":"237","line":265,"column":17,"nodeType":"187","messageId":"188","endLine":265,"endColumn":28},{"ruleId":"209","severity":1,"message":"210","line":279,"column":41,"nodeType":"211","messageId":"212","endLine":279,"endColumn":43},{"ruleId":"206","severity":1,"message":"213","line":306,"column":18,"nodeType":"187","messageId":"208","endLine":306,"endColumn":19},{"ruleId":"209","severity":1,"message":"210","line":309,"column":59,"nodeType":"211","messageId":"212","endLine":309,"endColumn":61},{"ruleId":"232","severity":1,"message":"233","line":319,"column":25,"nodeType":"234","messageId":"235","endLine":319,"endColumn":36},{"ruleId":"185","severity":1,"message":"219","line":8,"column":5,"nodeType":"187","messageId":"188","endLine":8,"endColumn":9},{"ruleId":"185","severity":1,"message":"220","line":12,"column":8,"nodeType":"187","messageId":"188","endLine":12,"endColumn":12},{"ruleId":"181","replacedBy":"238"},{"ruleId":"183","replacedBy":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'BarGauge' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'Legend' is defined but never used.","'Export' is defined but never used.","'Title' is defined but never used.","'Font' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'format' is assigned a value but never used.","'customizeText' is defined but never used.",["240"],["241"],"'makeStyles' is defined but never used.","'GaugePerformance' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["242"],"no-redeclare","'j' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'i' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardActions' is defined but never used.","'Button' is defined but never used.","'Size' is defined but never used.","'Tree' is defined but never used.","'Typography' is defined but never used.",["240"],["241"],["240"],["241"],["243"],"'dataa' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'test'. Either include it or remove the dependency array.",["244"],"'milestones' is assigned a value but never used.","'new_key' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'time_under' is already defined.","'remove_list' is assigned a value but never used.",["240"],["241"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"245","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [getData]",{"range":"250","text":"251"},{"range":"252","text":"251"},"Update the dependencies array to be: [test]",{"range":"253","text":"254"},[4801,4803],"[getData]",[4829,4831],[2536,2538],"[test]"]