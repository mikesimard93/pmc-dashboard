[{"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/index.js":"1","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/App.js":"2","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/hours_members.js":"3","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/pie_chart_hours.js":"4","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/gauge.js":"5","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/to_watch.js":"6","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/finance_gauge.js":"7","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/graph.js":"8","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/intro.js":"9","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data/data.js":"10","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/pie_chart_modules_hours.js":"11"},{"size":219,"mtime":1611353228160,"results":"12","hashOfConfig":"13"},{"size":7346,"mtime":1611573432616,"results":"14","hashOfConfig":"13"},{"size":4370,"mtime":1611574056256,"results":"15","hashOfConfig":"13"},{"size":1439,"mtime":1611353019188,"results":"16","hashOfConfig":"13"},{"size":701,"mtime":1611014086319,"results":"17","hashOfConfig":"13"},{"size":1670,"mtime":1611017490108,"results":"18","hashOfConfig":"13"},{"size":1031,"mtime":1611516507950,"results":"19","hashOfConfig":"13"},{"size":4742,"mtime":1611537866724,"results":"20","hashOfConfig":"13"},{"size":1592,"mtime":1611353627800,"results":"21","hashOfConfig":"13"},{"size":2087,"mtime":1610996798889,"results":"22","hashOfConfig":"13"},{"size":1453,"mtime":1611516963773,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18jbzw8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/index.js",[],["54","55"],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/App.js",["56","57","58","59","60","61","62","63","64","65","66"],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/hours_members.js",["67","68"],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/pie_chart_hours.js",["69"],"import React from 'react';\n\nimport PieChart, {\n    Series,\n    Label,\n    Connector,\n    Size,\n    Export\n} from 'devextreme-react/pie-chart';\n\nimport { areas } from '../data/data.js';\n\nclass PieChartHours extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.pointClickHandler = this.pointClickHandler.bind(this);\n        this.legendClickHandler = this.legendClickHandler.bind(this);\n    }\n\n    render() {\n        return (\n            <PieChart\n                id=\"pie\"\n                dataSource={areas}\n                palette=\"Bright\"\n\n                onPointClick={this.pointClickHandler}\n                onLegendClick={this.legendClickHandler}\n            >\n                <Series\n                    argumentField=\"country\"\n                    valueField=\"area\"\n                >\n                    <Label visible={true}>\n                        <Connector visible={true} width={1} />\n                    </Label>\n                </Series>\n\n\n                <Export enabled={false} />\n            </PieChart>\n        );\n    }\n\n    pointClickHandler(e) {\n        this.toggleVisibility(e.target);\n    }\n\n    legendClickHandler(e) {\n        let arg = e.target;\n        let item = e.component.getAllSeries()[0].getPointsByArg(arg)[0];\n\n        this.toggleVisibility(item);\n    }\n\n    toggleVisibility(item) {\n        item.isVisible() ? item.hide() : item.show();\n    }\n}\n\nexport default PieChartHours;","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/gauge.js",["70","71","72"],"import React from 'react';\nimport { BarGauge, Label, Legend, Export, Title, Font } from 'devextreme-react/bar-gauge';\n\nconst values = [1];\nconst format = {\n    type: 'fixedPoint',\n    precision: 1\n};\n\nclass App extends React.Component {\n\n    render() {\n        return (\n\n            <BarGauge\n                id=\"gauge\"\n                startValue={0}\n                endValue={2}\n                defaultValues={values}\n            >\n                <Label indent={20} format={format} customizeText={this.customizeText} />\n                <Export enabled={false} />\n            </BarGauge>\n        );\n    }\n\n    customizeText({ valueText }) {\n        return `${valueText}`;\n    }\n}\n\nexport default App;","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/to_watch.js",["73","74","75"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nexport default function OutlinedCard() {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    Éléments\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" color=\"error\">\n                    IMPORTANT\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    à surveiller\n                </Typography>\n                <Typography variant=\"body2\"  align=\"left\" component=\"p\">\n                    <ul>\n                        <li>Échéancier serré -> Supervision des modules plus étroite suggérée</li>\n                        <li>Utilisation d'Asana de façon impeccable essentielle</li>\n                    </ul>\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/finance_gauge.js",["76","77"],"import React from 'react';\nimport { BarGauge, Label, Export, Legend, Title, Font } from 'devextreme-react/bar-gauge';\n\nconst values = [8000, -2000, 3500];\nconst textD = [\"Revenus\", \"Dépenses\", \"Balance\"];\n\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <BarGauge\n                id=\"gauge\"\n                startValue={-10000}\n                endValue={10000}\n                baseValue={0}\n                values={values}\n                palette=\"Ocean\"\n            >\n                <Label customizeText={this.customizeTooltip} />\n                <Export enabled={false} />\n                <Legend visible={true} customizeText={this.customizeText} verticalAlignment=\"bottom\" horizontalAlignment=\"center\" />\n            </BarGauge>\n        );\n    }\n\n    customizeTooltip({ valueText }) {\n        return `${valueText} $`;\n    }\n\n    customizeText(arg) {\n        return getText(arg.item, arg.text);\n    }\n}\n\nfunction getText(item, text) {\n    return `${textD[item.index]}`;\n}\n\nexport default App;\n\n","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/graph.js",["78","79","80","81","82","83","84"],"import Tree from 'react-tree-graph';\nimport React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport '../App.css';\n\n\nconst asana = require('asana');\nconst client = asana.Client.create().useAccessToken('1/1105136235820223:056448b931a5e79f598f1fd698d25356');\n\n\nfunction Graph() {\n    const [graph, updateGraph] = React.useState([]);\n    const [dataLoaded, changeLoadStatus] = React.useState(false);\n    var tree = {}\n    React.useEffect(() => {\n        console.log(tree)\n        test()\n    }, [graph])\n\n    var milestones = {}\n    function getMilestones() {\n        return new Promise(resolve => {\n            client.tasks.searchInWorkspace('622159997203998', {'resource_subtype': 'milestone'})\n                // ,opt_fields=['due_on','assignee','completed_at','custom_fields','name', 'created_at', 'resource_subtype'], opt_pretty=True\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function getTask(task_gid) {\n        return new Promise(resolve => {\n            client.tasks.getTask(task_gid)\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function getDependencies(task_gid) {\n        return new Promise(resolve => {\n            client.tasks.dependencies(task_gid)\n                .then((result) => {\n                    resolve(result);\n                });\n        })\n    }\n\n    function fillObject(obj, task, time) {\n        return new Promise(resolve => {\n            const new_key = task.name\n            obj.children.push( {\n                gProps: {\n                    className: 'red-node'\n                },\n                name: task.name,\n                gid: task.gid,\n                total_dependencies_time: 0.0,\n                due_on: task.due_on,\n                created_at: task.created_at,\n                estimated_time: task.custom_fields[2].number_value,\n                completed_at: task.completed_at,\n                module: task.custom_fields[0].enum_value.name,\n                type: task.resource_subtype,\n                clocked_time: time\n            });\n\n            resolve(obj);\n        })\n    }\n\n    function recursive(task_dependencies, obj) {\n        return new Promise(async resolve => {\n            obj.children = new Array();\n            var total_time = 0\n            var time_to_add = 0\n            for (var i = 0; i < task_dependencies.length; i++) {\n                var dependency_time = 0\n                const dependency = await getTask(task_dependencies[i].gid)\n                if (dependency.custom_fields[2].number_value !== null) {\n                    total_time += dependency.custom_fields[2].number_value\n                }\n                await fillObject(obj, dependency, dependency_time)\n                var sub_task_dependencies = await getDependencies(dependency.gid)\n                if (sub_task_dependencies.length !== 0) {\n                    console.log(obj.children)\n                    var time_to_add = await recursive(sub_task_dependencies, obj.children[obj.children.length - 1])\n                }\n                else {}\n                total_time += time_to_add\n            }\n            obj.total_dependencies_time = total_time\n            resolve(total_time);\n        });\n    }\n    async function test() {\n        var top_task = {}\n        const milestones = await getMilestones();\n        // console.dir(milestones.data)\n        var i;\n        for (i = 0; i < milestones.data.length; i++) {\n            const task = await getTask(milestones.data[i].gid);\n            try {\n                if (task.custom_fields[3].enum_value.name == 'Goal'){\n                    top_task = task\n                    break;\n                }\n            }\n            catch(err){}\n        }\n        const dependencies = await getDependencies(top_task.gid)\n\n        tree.name = top_task.name\n        tree.children = new Array();\n        await fillObject(tree, top_task, 0)\n        await recursive(dependencies, tree)\n        console.log(tree)\n        updateGraph(tree)\n        changeLoadStatus(true)\n        return tree\n    }\n\n    return (\n        <div >\n            {(function () {\n                if (!dataLoaded) {\n                    return <Box > <CircularProgress size={40} />\n                    <Box pt={2}>May take several minutes to load..</Box>\n                    </Box>\n                } else {\n                    return <Tree\n                        data={graph}\n                        nodeRadius={30}\n                        height={2000}\n                        width={1500}/>;\n                }\n            })()}\n        </div>\n    );\n}\n\nexport default Graph;","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/intro.js",["85","86","87"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\n\nexport default function OutlinedCard() {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    Resumé\n                </Typography>\n                <Typography variant=\"body2\" align=\"left\" component=\"p\">\n                    Première semaine concluante. Les modules sont bien repartis et les chanchements\n                    aux méthodes de gestion semblent pertinentes et efficaces. Quelques points:\n                    <ul>\n                        <li>15 février -> Rover V0</li>\n                        <li>V0 du tableau de bord: sera amélioré de façon continue</li>\n                        <li>Nouvelle commandite de 5000$ confirmée</li>\n                    </ul>\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}","/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data/data.js",[],"/Users/mikesimard/Documents/PMC/pmc-dashboard/src/data_vizualisation/pie_chart_modules_hours.js",["88"],"import React from 'react';\n\nimport PieChart, {\n    Series,\n    Label,\n    Connector,\n    Size,\n    Export\n} from 'devextreme-react/pie-chart';\n\nimport { areas } from '../data/data.js';\n\nclass PieChartHoursModules extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.pointClickHandler = this.pointClickHandler.bind(this);\n        this.legendClickHandler = this.legendClickHandler.bind(this);\n    }\n\n    render() {\n        return (\n            <PieChart\n                id=\"pie\"\n                dataSource={areas}\n                palette=\"Bright\"\n\n                onPointClick={this.pointClickHandler}\n                onLegendClick={this.legendClickHandler}\n            >\n                <Series\n                    argumentField=\"country\"\n                    valueField=\"area\"\n                >\n                    <Label visible={true}>\n                        <Connector visible={true} width={1} />\n                    </Label>\n                </Series>\n\n\n                <Export enabled={false} />\n            </PieChart>\n        );\n    }\n\n    pointClickHandler(e) {\n        this.toggleVisibility(e.target);\n    }\n\n    legendClickHandler(e) {\n        let arg = e.target;\n        let item = e.component.getAllSeries()[0].getPointsByArg(arg)[0];\n\n        this.toggleVisibility(item);\n    }\n\n    toggleVisibility(item) {\n        item.isVisible() ? item.hide() : item.show();\n    }\n}\n\nexport default PieChartHoursModules;",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":22,"column":8,"nodeType":"95","messageId":"96","endLine":22,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":40,"column":25,"nodeType":"99","endLine":40,"endColumn":120},{"ruleId":"97","severity":1,"message":"98","line":41,"column":25,"nodeType":"99","endLine":41,"endColumn":119},{"ruleId":"97","severity":1,"message":"98","line":42,"column":25,"nodeType":"99","endLine":42,"endColumn":119},{"ruleId":"97","severity":1,"message":"98","line":43,"column":25,"nodeType":"99","endLine":43,"endColumn":116},{"ruleId":"97","severity":1,"message":"98","line":44,"column":25,"nodeType":"99","endLine":44,"endColumn":115},{"ruleId":"97","severity":1,"message":"98","line":45,"column":25,"nodeType":"99","endLine":45,"endColumn":116},{"ruleId":"97","severity":1,"message":"98","line":46,"column":25,"nodeType":"99","endLine":46,"endColumn":115},{"ruleId":"97","severity":1,"message":"98","line":47,"column":25,"nodeType":"99","endLine":47,"endColumn":120},{"ruleId":"97","severity":1,"message":"98","line":48,"column":25,"nodeType":"99","endLine":48,"endColumn":117},{"ruleId":"97","severity":1,"message":"98","line":49,"column":25,"nodeType":"99","endLine":49,"endColumn":119},{"ruleId":"100","severity":1,"message":"101","line":64,"column":8,"nodeType":"102","endLine":64,"endColumn":10,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":87,"column":18,"nodeType":"95","messageId":"106","endLine":87,"endColumn":19},{"ruleId":"93","severity":1,"message":"107","line":7,"column":5,"nodeType":"95","messageId":"96","endLine":7,"endColumn":9},{"ruleId":"93","severity":1,"message":"108","line":2,"column":27,"nodeType":"95","messageId":"96","endLine":2,"endColumn":33},{"ruleId":"93","severity":1,"message":"109","line":2,"column":43,"nodeType":"95","messageId":"96","endLine":2,"endColumn":48},{"ruleId":"93","severity":1,"message":"110","line":2,"column":50,"nodeType":"95","messageId":"96","endLine":2,"endColumn":54},{"ruleId":"93","severity":1,"message":"111","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":19},{"ruleId":"93","severity":1,"message":"112","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":14},{"ruleId":"93","severity":1,"message":"113","line":28,"column":11,"nodeType":"95","messageId":"96","endLine":28,"endColumn":15},{"ruleId":"93","severity":1,"message":"109","line":2,"column":43,"nodeType":"95","messageId":"96","endLine":2,"endColumn":48},{"ruleId":"93","severity":1,"message":"110","line":2,"column":50,"nodeType":"95","messageId":"96","endLine":2,"endColumn":54},{"ruleId":"100","severity":1,"message":"114","line":19,"column":8,"nodeType":"102","endLine":19,"endColumn":15,"suggestions":"115"},{"ruleId":"93","severity":1,"message":"116","line":21,"column":9,"nodeType":"95","messageId":"96","endLine":21,"endColumn":19},{"ruleId":"93","severity":1,"message":"117","line":52,"column":19,"nodeType":"95","messageId":"96","endLine":52,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":75,"column":28,"nodeType":"120","messageId":"121","endLine":75,"endColumn":39},{"ruleId":"104","severity":1,"message":"122","line":88,"column":25,"nodeType":"95","messageId":"106","endLine":88,"endColumn":36},{"ruleId":"123","severity":1,"message":"124","line":105,"column":59,"nodeType":"125","messageId":"126","endLine":105,"endColumn":61},{"ruleId":"118","severity":1,"message":"119","line":115,"column":25,"nodeType":"120","messageId":"121","endLine":115,"endColumn":36},{"ruleId":"93","severity":1,"message":"111","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":19},{"ruleId":"93","severity":1,"message":"112","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":14},{"ruleId":"93","severity":1,"message":"113","line":29,"column":11,"nodeType":"95","messageId":"96","endLine":29,"endColumn":15},{"ruleId":"93","severity":1,"message":"107","line":7,"column":5,"nodeType":"95","messageId":"96","endLine":7,"endColumn":9},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Graph' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["129"],"no-redeclare","'j' is already defined.","redeclared","'Size' is defined but never used.","'Legend' is defined but never used.","'Title' is defined but never used.","'Font' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'bull' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'test' and 'tree'. Either include them or remove the dependency array.",["130"],"'milestones' is assigned a value but never used.","'new_key' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'time_to_add' is already defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [getData]",{"range":"135","text":"136"},"Update the dependencies array to be: [graph, test, tree]",{"range":"137","text":"138"},[1544,1546],"[getData]",[569,576],"[graph, test, tree]"]